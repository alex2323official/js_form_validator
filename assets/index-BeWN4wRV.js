var V=i=>{throw TypeError(i)};var F=(i,r,n)=>r.has(i)||V("Cannot "+n);var e=(i,r,n)=>(F(i,r,"read from private field"),n?n.call(i):r.get(i)),o=(i,r,n)=>r.has(i)?V("Cannot add the same private member more than once"):r instanceof WeakSet?r.add(i):r.set(i,n);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))p(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const d of s.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&p(d)}).observe(document,{childList:!0,subtree:!0});function n(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function p(t){if(t.ep)return;t.ep=!0;const s=n(t);fetch(t.href,s)}})();var w,m,a,u,c,x,h,l,f,y,q,g,C,v;class L{constructor(){o(this,w,document.querySelector("form"));o(this,m,document.querySelector("#email"));o(this,a,document.querySelector("#country"));o(this,u,document.querySelector("#zipCode"));o(this,c,document.querySelector("#password"));o(this,x,document.querySelector("#confirmPassword"));o(this,h,document.querySelector("#errorEmail"));o(this,l,document.querySelector("#errorCountry"));o(this,f,document.querySelector("#errorZipcode"));o(this,y,document.querySelector("#errorPassword"));o(this,q,document.querySelector("#errorConfirmPassword"));o(this,g,document.querySelector("#button"));o(this,C,document.querySelector("#errorFormSubmit"));o(this,v,document.querySelector("#successFormSubmit"))}controllerUserFormInput(){let r=!1,n=!1,p=!1,t=!1,s=!1,d=!1;e(this,m).addEventListener("focusout",b=>{switch(!0){case e(this,m).validity.valueMissing:e(this,h).textContent="E-mail field can't be empty.";break;case e(this,m).validity.typeMismatch:e(this,h).textContent="You nedd to provide a aproper e-mail format.";break;default:e(this,h).textContent="",e(this,m).setCustomValidity(""),r=!0}}),e(this,a).addEventListener("focusout",b=>{const S=/\d/,P=/[^a-zA-Z0-9]/;switch(!0){case e(this,a).validity.valueMissing:e(this,l).textContent="Country field can't be empty.";break;case e(this,a).validity.typeMismatch:e(this,l).textContent="You nedd to provide a aproper country format.";break;case S.test(e(this,a).value):e(this,l).textContent="Country field can not contain any numbers.",e(this,a).setCustomValidity("Wrong - trigger :invalid class on element");break;case P.test(e(this,a).value):e(this,l).textContent="Country field can not contain other characters than letters.",e(this,a).setCustomValidity("Wrong - trigger :invalid class on element");break;default:e(this,l).textContent="",e(this,a).setCustomValidity(""),n=!0}}),e(this,u).addEventListener("focusout",b=>{const S=/^\d{2}-\d{3}$/;switch(!0){case e(this,u).validity.valueMissing:e(this,f).textContent="Zip Code field can't be empty.";break;case!S.test(e(this,u).value):e(this,f).textContent="You nedd to provide a proper Zip Code format (xx-xxx).",e(this,u).setCustomValidity("Wrong - trigger :invalid class on element");break;default:e(this,f).textContent="",e(this,u).setCustomValidity(""),p=!0}}),e(this,c).addEventListener("focusout",b=>{switch(!0){case e(this,c).validity.valueMissing:e(this,y).textContent="Password field can't be empty.";break;case e(this,c).validity.typeMismatch:e(this,y).textContent="You nedd to provide a aproper password format.";break;default:e(this,y).textContent="",e(this,c).setCustomValidity(""),t=!0}}),e(this,g).addEventListener("click",b=>{e(this,c).value===e(this,x).value?(s=!0,d=!0):d=!1,r&&n&&p&&t&&s&&d?(e(this,C).textContent="",e(this,v).textContent="Form Submited! You are awesome <3!"):(e(this,v).textContent="",e(this,C).textContent="You need to have all fields valid to submit this form!")})}}w=new WeakMap,m=new WeakMap,a=new WeakMap,u=new WeakMap,c=new WeakMap,x=new WeakMap,h=new WeakMap,l=new WeakMap,f=new WeakMap,y=new WeakMap,q=new WeakMap,g=new WeakMap,C=new WeakMap,v=new WeakMap;const E=new L;E.controllerUserFormInput();
